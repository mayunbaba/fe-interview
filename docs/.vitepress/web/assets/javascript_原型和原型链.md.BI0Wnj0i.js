import{j as d,P as u,D as a,m as y,a1 as g,i as m}from"./chunks/framework.DyWNUh6Q.js";import"./chunks/theme.0vZazFZp.js";const b="/assets/image.MPrWBjzF.png",j={__name:"class",setup(i){class t{constructor(e,s){this.name=e,this.age=s}sayHi(){console.log(`Hi, I'm ${this.name}, I'm ${this.age} years old`)}}class o extends t{constructor(e,s,p){super(e,s),this.school=p}study(){console.log(`${this.name} is studying at ${this.school}`)}}class h extends t{constructor(e,s,p){super(e,s),this.subject=p}teach(){console.log(`${this.name} is teaching ${this.subject}`)}}const _=new t("Jack",25);_.sayHi();const r=new o("Tom",18,"MIT");r.sayHi(),r.study();const c=new o.prototype.constructor("Lily",20,"Havard");c.sayHi(),c.study();const n=new h("Jerry",30,"Math");return n.sayHi(),n.teach(),console.log(r.__proto__,"student.__proto__"),console.log(o.prototype,"Student.prototype"),console.log(r.__proto__===o.prototype),console.log(o.prototype.__proto__,"Student.prototype.__proto__"),console.log(t.prototype,"People.prototype"),console.log(o.prototype.__proto__===t.prototype,t.prototype===_.__proto__),console.log(t.prototype.__proto__,"People.prototype.__proto__"),console.log(Object.prototype,"Object.prototype"),console.log(t.prototype.__proto__===Object.prototype),console.log(Object.prototype.__proto__,"Object.prototype.__proto__"),(l,e)=>null}},f=a("h1",{id:"原型和原型链",tabindex:"-1"},[y("原型和原型链 "),a("a",{class:"header-anchor",href:"#原型和原型链","aria-label":'Permalink to "原型和原型链"'},"​")],-1),P=a("div",{class:"info custom-block"},[a("p",{class:"custom-block-title"},"INFO"),a("p",null,"code")],-1),x=g('<p><img src="'+b+'" alt="alt text"></p><h2 id="谈谈你对原型的理解" tabindex="-1">谈谈你对原型的理解 <a class="header-anchor" href="#谈谈你对原型的理解" aria-label="Permalink to &quot;谈谈你对原型的理解&quot;">​</a></h2><p>每个函数在创建时都会生成一个名为prototype的属性。这个属性指向一个对象，即该函数的原型对象。</p><h2 id="什么是原型链" tabindex="-1">什么是原型链 <a class="header-anchor" href="#什么是原型链" aria-label="Permalink to &quot;什么是原型链&quot;">​</a></h2><ul><li>原型链是原型对象创建过程的历史记录。</li><li>当访问一个对象的属性时，JavaScript会在对象本身属性上查找，然后在原型对象上查找，一直向上搜索，直到找到匹配的属性或到达原型链的末尾.</li><li>每个实例对象都有一个属性__proto__，它指向构造函数的原型对象。</li></ul><h2 id="原型关系" tabindex="-1">原型关系 <a class="header-anchor" href="#原型关系" aria-label="Permalink to &quot;原型关系&quot;">​</a></h2><ul><li>每个Class都有显示原型prototype</li><li>每个实例都有隐式原型_proto_</li><li><strong>实例的隐式原型（<strong>proto</strong>）指向对应的class的显式原型（prototype）</strong></li><li><strong>当使用类（class）定义一个对象时，类的原型最终会指向内置的 Object.prototype</strong></li></ul><p><a href="https://juejin.cn/post/7095651623812202533" target="_blank" rel="noreferrer">参考链接：掘金</a></p>',8),S=JSON.parse('{"title":"原型和原型链","description":"","frontmatter":{},"headers":[],"relativePath":"javascript/原型和原型链.md","filePath":"javascript/原型和原型链.md"}'),k={name:"javascript/原型和原型链.md"},v=Object.assign(k,{setup(i){return(t,o)=>(m(),d("div",null,[f,P,u(j),x]))}});export{S as __pageData,v as default};
