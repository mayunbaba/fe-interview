import{_ as o,j as e,i as a,a1 as t}from"./chunks/framework.DyWNUh6Q.js";import"./chunks/theme.0vZazFZp.js";const u=JSON.parse('{"title":"存储","description":"","frontmatter":{},"headers":[],"relativePath":"WebApi/存储.md","filePath":"WebApi/存储.md"}'),i={name:"WebApi/存储.md"},r=t('<h1 id="存储" tabindex="-1">存储 <a class="header-anchor" href="#存储" aria-label="Permalink to &quot;存储&quot;">​</a></h1><h2 id="cookie-localstroage-sessionstorage" tabindex="-1">Cookie localStroage sessionStorage <a class="header-anchor" href="#cookie-localstroage-sessionstorage" aria-label="Permalink to &quot;Cookie localStroage sessionStorage&quot;">​</a></h2><p>cookie最早被被用来追踪用户行为、每次HTTP请求都会发送到服务端。</p><p>后来客户端有了存储数据的需求就顺便放在cookie中了，不是最优解。</p><p>所以localStroage和sessionStroage诞生了。</p><p><strong>cookie可以设置作用域，当设置为主域时，不同二级域名之间可以共享cookie信息，stroage不可以。</strong></p><h2 id="cookie-的安全性问题是什么-如何提高-cookie-的安全性" tabindex="-1">Cookie 的安全性问题是什么？如何提高 Cookie 的安全性？ <a class="header-anchor" href="#cookie-的安全性问题是什么-如何提高-cookie-的安全性" aria-label="Permalink to &quot;Cookie 的安全性问题是什么？如何提高 Cookie 的安全性？&quot;">​</a></h2><ul><li>设置Secure属性，只在HTTPS链接时发送Cookie</li><li>设置HttpOnly属性，防止客户端JavaScript访问cookie</li></ul>',8),s=[r];function c(l,n,_,p,k,d){return a(),e("div",null,s)}const S=o(i,[["render",c]]);export{u as __pageData,S as default};
